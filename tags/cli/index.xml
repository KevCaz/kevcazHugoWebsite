<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cli on KevCaz's Website</title><link>https://kevcaz.github.io/tags/cli/</link><description>Recent content in cli on KevCaz's Website</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Content under CC0 1.0 Universal unless otherwise specified.</copyright><lastBuildDate>Sun, 09 Feb 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://kevcaz.github.io/tags/cli/index.xml" rel="self" type="application/rss+xml"/><item><title>Count your lines of code with `cloc`</title><link>https://kevcaz.github.io/notes/cli/cloc/</link><pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/cli/cloc/</guid><description>I recently found out about cloc that is a very useful command line tool written in Perl that &amp;ldquo;counts blank lines, comment lines, and physical lines of source code in many programming languages&amp;quot;1. Let's see how it works üëÅ.
The first step is to install cloc, there are several ways to do so, as a Debian user (Debian Buster) all I had to do was to use apt-get:
1 $ apt-get install cloc Once installed, cloc can be call in a Terminal like so: cloc path/to/file_or_folder.</description></item><item><title>Convert a pdf file to a text file with pdftotext</title><link>https://kevcaz.github.io/notes/doc/pdftotext/</link><pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/doc/pdftotext/</guid><description>Today I was asked whether I was aware of a way to extract a table from a pdf file. I actually knew about one CLI tool pdftotext üîó that converts a pdf file to a text file and I had this memory that I had used it for tables in the past. pdftotext is developed by Glyph &amp;amp; Cog with several other CLI tools to manipulate pdf files and the pdf viewer Xpdf.</description></item><item><title>Combine multiple pdf files</title><link>https://kevcaz.github.io/notes/doc/combinepdfs/</link><pubDate>Thu, 24 Oct 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/doc/combinepdfs/</guid><description>For a recent job application, I needed to combine several pdf files into a single one and to number its pages afterwards. I already knew that I would be able to use PDFtk, a smart CLI tool I mentioned in a previous note to combine the pdf files but I was not sure how to proceed for the page numbering. Turns out that PDFtk is also useful for this too!</description></item><item><title>Send a set of command lines to GNOME Terminal</title><link>https://kevcaz.github.io/notes/cli/paste2gnuterm/</link><pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/cli/paste2gnuterm/</guid><description>Context As mentioned several times on this website, I use Atom for my coding as well as for writing posts and manuscripts. While coding, one often needs to run commands in a terminal. To do so, I use specific Atom packages such as IDE-R or Julia Client to run R and Julia commands respectively and platformio-ide-terminal. The latter meets most of my expectations, but:
the terminal emulated is in a bottom panel and when I'm working on my laptop I cannot get a good overview of the code and the corresponding outputs at the same time, pretty annoying&amp;hellip; and having the terminal in the right panel is a feature unlikely to be implemented in a near future;</description></item><item><title>Extract a range of pages from a .pdf file</title><link>https://kevcaz.github.io/notes/doc/pdftk/</link><pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/doc/pdftk/</guid><description>Today, I was looking for a way to extract pages from a pdf file with the command line interface and stumbled on this answer on , and so I decided to try PDFtk. After a quick installation (apt-get install pdftk), I simply reproduced the example in the answer with my file!
1 $ pdftk book.pdf cat 34-45 output chapter2.pdf Very handy, quite easy to use and efficient! Digging a little more the documentation, it turns out that you can do way more!</description></item><item><title>Multiple-protocol with aria2</title><link>https://kevcaz.github.io/notes/cli/aria2/</link><pubDate>Fri, 10 May 2019 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/cli/aria2/</guid><description>People at TecMint wrote great posts and gatherhui tons of tips about Linux. Recently, they twitted about aria2:
Aria2 ‚Äì A Multi-Protocol Command-Line #Download Tool for #Linux https://t.co/u7GM9Sgozu via @tecmint RT @linuxtoday pic.twitter.com/1GMGKHOEYA
&amp;mdash; Linux Inside: The Ideal Blog for Sysadmins &amp;amp; Geeks (@tecmint) April 29, 2019 I gave it a try, and it's pretty sweet üòÑ! With a simple command line, you can download any file using any of the most common transfer protocols!</description></item><item><title>Make your computer talk!</title><link>https://kevcaz.github.io/notes/cli/sotospeak/</link><pubDate>Sat, 20 Oct 2018 00:00:00 +0000</pubDate><guid>https://kevcaz.github.io/notes/cli/sotospeak/</guid><description>When I was on MacOS, I really enjoyed the command say to make my macOS speak (another bad reason to procrastinate) and I was looking for a similar tool on Linux to make my Lenovo speak üòÑ. After a quick search, I found two software: spd-say and espeak. They both offer the same basic options, similar to the ones say provides on MacOS.
spd-say spd-say was already included in the set of tools I install with Debian so I checked out the documentation with man spd-say:</description></item></channel></rss>